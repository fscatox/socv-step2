%!PS-Adobe-3.0 EPSF-3.0
%%Title: bench.eps
%%Creator: XCircuit v0.0 rev-1274319251
%%CreationDate: Thu Jun 15 18:54:49 2023
%%Pages: 1
%%BoundingBox: 68 68 904 604
%%DocumentNeededResources: font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 -0.000 0 40 generic::arrowhead
endgate
} def


%%EndSetup

%%Page: bench 1
%%PageOrientation: Portrait
%%PageBoundingBox: 72 72 900 600
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 2144 1152 translate

1 1.000 -1488 288 -1488 192 -1328 224 3 polygon
1 1.000 -1328 320 -1328 224 2 polygon
1 1.000 -1488 288 -1328 320 2 polygon
1 1.000 -1328 320 -1408 256 -1488 288 3 polygon
1 1.000 -1408 240 151 0.000 360.000 xcarc
0 1.000 -1568 416 -1568 -160 -1088 -160 -1088 416 4 polygon
(Generator) {/Times-Roman cf} 2 23 0.000 1.000 -1120 384 label
(blueprint) {/Times-Roman cf} 2 21 0.000 1.000 -1424 64 label
1 1.000 -1296 -16 -1136 16 2 polygon
1 1.000 -1136 16 -1216 -48 -1296 -16 3 polygon
1 1.000 -1296 -16 -1296 -112 -1136 -80 3 polygon
1 1.000 -1136 16 -1136 -80 2 polygon
1.000 150.000 -1264 64 generic::arrow
(.randomize\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -1392 176 label
(.copy\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -1200 96 label
1 1.000 -1280 -208 -1152 -208 -1152 -192 -1280 -192 spline
1 1.000 -1280 -176 -1152 -176 -1152 -192 -1280 -192 spline
1 1.000 -1280 -592 -1152 -592 -1152 -576 -1280 -576 spline
1 1.000 -1280 -192 -1280 -576 2 polygon
1 1.000 -1152 -192 -1152 -576 2 polygon
(mailbox gen2drv) {/Times-Roman cf} 2 21 285.000 1.000 -1216 -368 label
1 1.000 -1440 -576 -1440 -192 2 polygon
1.000 0.000 -1440 -176 generic::arrowhead
(event drv2gen) {/Times-Roman cf} 2 21 105.000 1.000 -1504 -384 label
0 1.000 -864 416 -864 -160 64 -160 64 416 4 polygon
(Scoreboard) {/Times-Roman cf} 2 23 0.000 1.000 32 384 label
1 1.000 -688 32 -688 -96 -704 -96 -704 32 spline
1 1.000 -704 32 -320 32 2 polygon
1 1.000 -704 -96 -320 -96 2 polygon
1 1.000 -304 32 -304 -96 -320 -96 -320 32 spline
(queue xpected) {/Times-Roman cf} 2 21 345.000 1.000 -512 -32 label
(Driver) {/Times-Roman cf} 2 20 0.000 1.000 -1536 -640 label
1 1.000 -1104 -704 -832 -704 -784 -752 -832 -800 -1104 -800 -1104 -704 6 
polygon
1 1.000 -1088 -704 -1088 -608 -1568 -608 -1568 -896 -1088 -896 -1088 -800 6 
polygon
(virtual interface) {/Times-Roman cf} 2 21 360.000 1.000 -960 -752 label
(DUT) {/Times-Roman cf} 2 21 360.000 1.000 -688 -752 label
0.000 0.000 0.000 scb
225 1.000 -1440 -690 2 0.000 360.000 xcarc
225 1.000 -1444 -696 -1444 -767 2 polygon
225 1.000 -1438 -696 -1437 -766 2 polygon
225 1.000 -1442 -790 -1470 -780 -1470 -768 -1444 -762 spline
225 1.000 -1440 -796 -1474 -790 -1476 -768 -1437 -766 spline
225 1.000 -1476 -768 -1481 -772 -1470 -756 -1470 -768 4 polygon
225 1.000 -1440 -690 7 -71.565 225.000 xcarc
225 1.000 -1424 -706 2 0.000 360.000 xcarc
225 1.000 -1428 -712 -1428 -783 2 polygon
225 1.000 -1422 -712 -1421 -782 2 polygon
225 1.000 -1426 -806 -1454 -796 -1454 -784 -1428 -778 spline
225 1.000 -1424 -812 -1458 -806 -1460 -784 -1421 -782 spline
225 1.000 -1460 -784 -1465 -788 -1454 -772 -1454 -784 4 polygon
225 1.000 -1424 -706 7 -71.565 225.000 xcarc
225 1.000 -1408 -722 2 0.000 360.000 xcarc
225 1.000 -1412 -728 -1412 -799 2 polygon
225 1.000 -1406 -728 -1405 -798 2 polygon
225 1.000 -1410 -822 -1438 -812 -1438 -800 -1412 -794 spline
225 1.000 -1408 -828 -1442 -822 -1444 -800 -1405 -798 spline
225 1.000 -1444 -800 -1449 -804 -1438 -788 -1438 -800 4 polygon
225 1.000 -1408 -722 7 -71.565 225.000 xcarc
sce
(callbacks queue) {/Times-Roman cf} 2 21 360.000 1.000 -1424 -848 label
0 1.000 -1920 -320 -1920 -896 -1664 -896 -1664 -320 4 polygon
(Coverage) {CR} (Functional) {/Times-Roman cf} 4 20 0.000 1.000 -1888 -384 
label
3 1.000 -1472 -736 -1680 -784 -1728 -704 -1488 -736 spline
1.000 315.000 -1736 -698 generic::arrowhead
(.sample\(\)) {/Times-Roman cf} 2 21 360.000 1.000 -1760 -768 label
1 1.000 -1296 -736 -1296 -832 -1136 -800 3 polygon
1 1.000 -1136 -704 -1216 -768 -1296 -736 3 polygon
1 1.000 -1296 -736 -1136 -704 2 polygon
1 1.000 -1136 -704 -1136 -800 2 polygon
1 1.000 -896 -288 -976 -352 -1056 -320 3 polygon
1 1.000 -1056 -320 -1056 -416 -896 -384 3 polygon
1 1.000 -1056 -320 -896 -288 2 polygon
1 1.000 -896 -288 -896 -384 2 polygon
1.000 60.000 -728 -42 generic::arrowhead
1 1.000 -720 32 -720 -96 -704 -96 -704 32 spline
3 1.000 -1072 -544 -1168 -656 -1376 -736 -1008 -416 spline
3 1.000 -928 -256 -880 -96 -736 -48 -960 -304 spline
(prediction) {/Times-Roman cf} 2 21 345.000 1.000 -976 -368 label
0.000 0.000 0.000 scb
225 1.000 64 -690 2 0.000 360.000 xcarc
225 1.000 60 -696 60 -767 2 polygon
225 1.000 66 -696 67 -766 2 polygon
225 1.000 62 -790 34 -780 34 -768 60 -762 spline
225 1.000 64 -796 30 -790 28 -768 67 -766 spline
225 1.000 28 -768 23 -772 34 -756 34 -768 4 polygon
225 1.000 64 -690 7 -71.565 225.000 xcarc
225 1.000 80 -706 2 0.000 360.000 xcarc
225 1.000 76 -712 76 -783 2 polygon
225 1.000 82 -712 83 -782 2 polygon
225 1.000 78 -806 50 -796 50 -784 76 -778 spline
225 1.000 80 -812 46 -806 44 -784 83 -782 spline
225 1.000 44 -784 39 -788 50 -772 50 -784 4 polygon
225 1.000 80 -706 7 -71.565 225.000 xcarc
225 1.000 96 -722 2 0.000 360.000 xcarc
225 1.000 92 -728 92 -799 2 polygon
225 1.000 98 -728 99 -798 2 polygon
225 1.000 94 -822 66 -812 66 -800 92 -794 spline
225 1.000 96 -828 62 -822 60 -800 99 -798 spline
225 1.000 60 -800 55 -804 66 -788 66 -800 4 polygon
225 1.000 96 -722 7 -71.565 225.000 xcarc
sce
1 1.000 -192 -704 -192 -800 -32 -768 3 polygon
1 1.000 -32 -672 -112 -736 -192 -704 3 polygon
1 1.000 -192 -704 -32 -672 2 polygon
1 1.000 -32 -672 -32 -768 2 polygon
(callbacks queue) {/Times-Roman cf} 2 21 360.000 1.000 80 -848 label
0 1.000 -512 -608 -512 -896 -288 -896 -288 -608 4 polygon
1 1.000 -608 -704 -512 -704 2 polygon
1 1.000 -608 -704 -608 -800 -512 -800 3 polygon
1 1.000 -576 -704 -576 -672 -608 -640 -768 -640 -800 -672 -800 -736 6 polygon
1 1.000 -800 -768 -800 -832 -768 -864 -608 -864 -576 -832 -576 -800 6 polygon
1 1.000 -288 -704 -256 -704 -208 -752 -256 -800 -288 -800 5 polygon
1 1.000 -512 -832 -480 -848 -512 -864 3 polygon
1 1.000 -544 -768 -544 -848 -512 -848 3 polygon
(block) {CR} (clocking) {/Times-Roman cf} 4 21 360.000 1.000 -400 -736 label
(Monitor) {/Times-Roman cf} 2 23 0.000 1.000 208 -640 label
(virtual interface) {/Times-Roman cf} 2 21 360.000 1.000 -400 -576 label
1.000 0.000 -128 -128 generic::arrowhead
1 1.000 -128 0 144 0.000 360.000 xcarc
(.save_xpected\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -896 -64 label
(.check_actual\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -128 16 label
(.apply\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -1008 -656 label
(.capture\(\)) {/Times-Roman cf} 2 21 345.000 1.000 -192 -656 label
1 1.000 -672 368 -672 144 -512 160 3 polygon
1 1.000 -672 368 -512 384 2 polygon
1 1.000 -496 368 -496 144 2 polygon
1 1.000 -512 384 -512 160 2 polygon
1 1.000 -656 352 -656 128 -496 144 3 polygon
1 1.000 -656 352 -496 368 2 polygon
1 1.000 -480 352 -480 128 2 polygon
1 1.000 -640 336 -640 112 -480 128 3 polygon
1 1.000 -640 336 -480 352 2 polygon
(Config) {/Times-Roman cf} 2 21 345.000 1.000 -576 256 label
0.678 1.000 0.184 scb
512 1.000 -1952 448 -1952 -960 256 -960 256 448 4 polygon
sce
1 1.000 -32 -304 -112 -368 -192 -336 3 polygon
1 1.000 -192 -336 -192 -432 -32 -400 3 polygon
1 1.000 -32 -304 -32 -400 2 polygon
(actual) {/Times-Roman cf} 2 21 345.000 1.000 -112 -384 label
1 1.000 -192 -336 -32 -304 2 polygon
3 1.000 -128 -208 -128 -256 -112 -320 -128 -144 spline
3 1.000 -32 -624 -64 -528 -96 -416 32 -672 spline
1 1.000 -224 -736 -224 -608 224 -608 224 -896 -224 -896 -224 -768 6 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
